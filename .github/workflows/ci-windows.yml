name: CI-Windows

on:
  push:
    branches: [ "7_45_1_3161" ]
    paths-ignore:
    - '.github/workflows/ci.yml'
    - '.github/workflows/ci-macos.yml'
    - '.github/workflows/cibuildwheel.yml'
  pull_request:
    branches: [ master ]
    paths-ignore:
    - '.github/workflows/ci.yml'
    - '.github/workflows/ci-macos.yml'
    - '.github/workflows/cibuildwheel.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: windows-2022
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      matrix:
        arch: ["x64"]
        python-version: ["3.11"]
      fail-fast: false
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}
    - name: 'Setup NuGet credentials'
      shell: 'bash'
      run: |
        nuget="$(vcpkg fetch nuget | tail -n 1)"
        "${nuget}" \
          sources add \
          -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username "${GITHUB_REPOSITORY_OWNER}" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        "${nuget}" \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json"
    - name: Install packages
      run: |
        vcpkg new --application
        vcpkg add port curl[core,non-http,openssl]
        echo '{"dependencies": [{"name": "curl","default-features": false, "features": ["non-http","openssl"]}],"overrides": [{"name": "openssl","version": "1.1.1n"}]}' > .\vcpkg.json
        vcpkg install
        #vcpkg install curl[core,non-http,openssl]:${{ matrix.arch }}-windows
    - name: Install dependencies
      run: |
        Get-ChildItem -Recurse "C:\vcpkg\packages\curl_x64-windows\"
        Get-ChildItem -Recurse "C:\vcpkg\packages\openssl_x64-windows\"
        python -m pip install --upgrade pip
        pip install wheel delvewheel
        pip install flake8 pytest -r requirements-dev.txt
    - name: Build
      env:
        PYCURL_SSL_LIBRARY: openssl
        PYCURL_CURL_DIR: 'C:/vcpkg/packages/curl_${{ matrix.arch }}-windows'
        PYCURL_OPENSSL_DIR: 'C:/vcpkg/packages/openssl_${{ matrix.arch }}-windows'
        PYCURL_OPENSSL_LIB_NAME: 'libssl.lib'
      run: |
        python setup.py bdist_wheel
    - name: Repair & install built wheel
      run: |
        delvewheel repair --add-path $VCPKG_INSTALLATION_ROOT/installed/${{ matrix.arch }}-windows/bin dist/*.whl
        pip install wheelhouse/*.whl
      shell: bash
    - name: Test with pytest
      run: pytest -v -rs
    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl
