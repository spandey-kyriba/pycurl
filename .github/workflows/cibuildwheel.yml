name: Build Wheels

on:
  push:
    branches: [ "7_45_3_3161" ]
    paths-ignore:
    - '.github/workflows/ci.yml'
    - '.github/workflows/ci-windows.yml'

# on:
#   workflow_dispatch:
#     inputs:
#       pypi-env:
#         description: 'PyPI Environment for Deployment'
#         options:
#         - prod
#         - test
#         required: true
#         default: test

jobs:
  package-wheel:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macOS-14
          - os: macOS-13
        #  - os: ubuntu-22.04
        #  - os: windows-2022
        #    arch: x86
        #  - os: windows-2022
        #    arch: x64

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
        with:
          arch: ${{ matrix.arch }}

      - name: 'Setup NuGet credentials'
        if: runner.os == 'Windows'
        shell: 'bash'
        run: |
          nuget="$(vcpkg fetch nuget | tail -n 1)"
          "${nuget}" \
            sources add \
            -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json" \
            -storepasswordincleartext \
            -name "GitHub" \
            -username "${GITHUB_REPOSITORY_OWNER}" \
            -password "${{ secrets.GITHUB_TOKEN }}"
          "${nuget}" \
            setapikey "${{ secrets.GITHUB_TOKEN }}" \
            -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json"

      - name: Install packages (Windows)
        if: runner.os == 'Windows'
        run: vcpkg install curl[core,non-http,schannel]:${{ matrix.arch }}-windows

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch == 'x86' && 'x86' || 'AMD64' }}
          CIBW_ENVIRONMENT_WINDOWS: PYCURL_CURL_DIR=C:/vcpkg/packages/curl_${{ matrix.arch }}-windows PYCURL_SSL_LIBRARY=schannel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path C:/vcpkg/installed/${{ matrix.arch }}-windows/bin -w {dest_dir} {wheel}
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
